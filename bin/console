#!/usr/bin/env ruby


require "rubygems"
require "bundler"
Bundler.setup(:default)
Bundler.require

require 'logger'


$:.unshift(File.expand_path(File.dirname(__FILE__) + '/../lib'))

require 'irb'
require 'spontaneous'

Dir.chdir('test/fixtures/example_application')

Spontaneous.init(:mode => :back, :environment => :development)
Spontaneous.database.logger = Logger.new($stdout)


IRB.setup(nil)
irb = IRB::Irb.new

IRB.conf[:MAIN_CONTEXT] = irb.context

irb.context.evaluate("require 'irb/completion'", 0)
irb.context.evaluate(
  %@
HISTFILE = "../.irb_history"
MAXHISTSIZE = 100
begin
  histfile = File::expand_path(HISTFILE)
  if File::exists?(histfile)
    lines = IO::readlines(histfile).collect { |line| line.chomp }
    puts "Read \#{lines.nitems} saved history commands from '\#{histfile}'." if $VERBOSE
      Readline::HISTORY.push(*lines)
  else
    puts "History file '\#{histfile}' was empty or non-existant." if $VERBOSE
  end
  Kernel::at_exit do
    lines = Readline::HISTORY.to_a.reverse.uniq.reverse
    lines = lines[-MAXHISTSIZE, MAXHISTSIZE] if lines.nitems > MAXHISTSIZE
    puts "Saving \#{lines.length} history lines to '\#{histfile}'." if $VERBOSE
      File::open(histfile, File::WRONLY|File::CREAT|File::TRUNC) { |io| io.puts lines.join("\n") }
  end
rescue => e
  puts "Error when configuring permanent history: \#{e}" if $VERBOSE
  end

ETC_IRBRC_LOADED=true


include Spontaneous


  @, 0
)


trap("SIGINT") do
  irb.signal_handle
end

catch(:IRB_EXIT) do
  irb.eval_input
end




